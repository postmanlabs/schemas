{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "#/definitions/request",
  "title": "Request",
  "description": "A request represents an HTTP request.",
  "type": "object",
  "properties": {
    "folder": {
      "type": [
        "string",
        "null"
      ],
      "description": "Postman requests may or may not be a part of a folder. If this request belongs to a folder, that folder's unique ID (which is a [UUID](https://en.wikipedia.org/wiki/Globally_unique_identifier)) is stored in this field."
    },
    "id": {
      "type": "string",
      "description": "Postman can store a number of requests in each collection. In order to preserve the order of each request, we need to be able to identify requests uniquely. This field is a UUID assigned to each request."
    },
    "name": {
      "type": "string",
      "description": "Sometimes, you just need to call your request 'Bob'. Postman will let you do that, and store the name you give in this field."
    },
    "dataMode": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "raw",
            "urlencoded",
            "params",
            "binary"
          ],
          "description": "A request can have a specific data mode, and Postman supports these."
        },
        {
          "type": "null"
        }
      ]
    },
    "dataDisabled": {
      "type": "boolean",
      "default": false,
      "description": "When set to true, prevents request body from being sent."
    },
    "data": {
      "oneOf": [
        {
          "type": "array",
          "description": "Data is an array of key-values that the request goes with. POST data, PUT data, etc goes here.",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "contentType": {
                    "type": "string",
                    "description": "Override Content-Type header of this form data entity."
                  },
                  "type": {
                    "const": "text"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": [
                      "null",
                      "string",
                      "array"
                    ]
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "contentType": {
                    "type": "string",
                    "description": "Override Content-Type header of this form data entity."
                  },
                  "type": {
                    "const": "file"
                  }
                }
              }
            ]
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "descriptionFormat": {
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "html",
        "markdown",
        null
      ],
      "description": "A request can have an associated description text. Since description is meant to be long, it can be in either ``html`` or ``markdown`` formats. This field specifies that format."
    },
    "description": {
      "type": [
        "string",
        "null"
      ],
      "description": "The description of this request. Can be as long as you want. Postman also supports two formats for your description, ``markdown`` and ``html``."
    },
    "headers": {
      "type": "string",
      "description": "No HTTP request is complete without its headers, and the same is true for a Postman request. This field contains all the HTTP Headers in a raw string format."
    },
    "method": {
      "anyOf": [
        {
          "description": "The Standard HTTP method associated with this request.",
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "PATCH",
            "DELETE",
            "COPY",
            "HEAD",
            "OPTIONS",
            "LINK",
            "UNLINK",
            "PURGE",
            "LOCK",
            "UNLOCK",
            "PROPFIND",
            "VIEW"
          ]
        },
        {
          "description": "The Custom HTTP method associated with this request.",
          "type": "string"
        }
      ]
    },
    "auth": {
      "oneOf": [
        {
          "type": "null"
        },
        {
          "$ref": "#/definitions/auth"
        }
      ]
    },
    "currentHelper": {
      "$ref": "#/definitions/current-helper"
    },
    "helperAttributes": {
      "$ref": "#/definitions/helper-attributes"
    },
    "pathVariables": {
      "type": [
        "string",
        "object",
        "null"
      ],
      "description": "A Postman request allows you to use Path Variables in a request, e.g: ``/search/:bookId``. This field stores these variables."
    },
    "url": {
      "type": "string",
      "description": "Contains the complete URL for this request, along with the path variables, if any."
    },
    "events": {
      "$ref": "#/definitions/event-list"
    },
    "preRequestScript": {
      "$ref": "#/definitions/preRequestScript"
    },
    "tests": {
      "$ref": "#/definitions/tests"
    },
    "variables": {
      "$ref": "#/definitions/variable-list"
    },
    "time": {
      "type": "number",
      "multipleOf": 1,
      "description": "The timestamp for this request."
      // TODO: ask what this is
    },
    "responses": {
      "type": "array",
      "description": "A Postman request can have multiple responses associated with it. These responses are stored in this field.",
      "items": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "response",
        "title": "Response",
        "description": "A response represents an HTTP response.",
        "properties": {
          "request": {
            "type": [
              "string",
              "object",
              "null"
            ],
            "description": "A response is associated with a request. This fields contains the UUID of the request corresponding to this response."
          },
          "id": {
            "type": "string",
            "description": "In order to unambiguously identify a response, Postman assigns a UUID to it, and stores it in this field."
          },
          "name": {
            "type": "string",
            "description": "A response can have a friendly name, which goes here."
          },
          "status": {
            "type": "string",
            "description": ""
            //not sure where this is even used. Leaving blank for now.
          },
          "responseCode": {
            "type": "object",
            "title": "ResponseCode",
            "properties": {
              "code": {
                "type": "number",
                "description": "The numeric HTTP response code."
              },
              "name": {
                "type": "string",
                "description": "The textual HTTP response code."
              },
              "detail": {
                "type": "string",
                "description": "Detailed explanation of the response code."
              }
            },
            "required": [
              "code",
              "name"
            ]
          },
          "time": {
            "type": [
              "null",
              "string",
              "number"
            ],
            "description": "The time taken by this particular HTTP transaction to complete is stored in this field. For manually created responses, this field can be set to ``null``."
          },
          "timings": {
            "title": "Response Timings",
            "description": "Set of timing information related to request and response in milliseconds",
            "type": [
              "object",
              "null"
            ]
          },
          "headers": {
            "type": "array",
            "title": "Header",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Some headers can have names associated with them, which are stored in this field."
                },
                "key": {
                  "type": "string",
                  "description": "The left hand side (LHS) or 'key' of the header."
                },
                "value": {
                  "type": "string",
                  "description": "Value of the header, or the right hand side (RHS)."
                },
                "description": {
                  "type": "string",
                  "description": "An optional description about the header."
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          },
          "cookies": {
            "type": "array",
            "title": "Cookie",
            "items": {
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string",
                  "description": "The domain for which this cookie is valid."
                },
                "expirationDate": {
                  "type": "number",
                  "description": "The timestamp of the time when the cookie expires."
                },
                "hostOnly": {
                  "type": "boolean",
                  "description": "Indicates if this cookie is Host Only."
                },
                "httpOnly": {
                  "type": "boolean",
                  "description": "Indicates if this cookie is HTTP Only."
                },
                "name": {
                  "type": "string",
                  "description": "This is the name of the Cookie."
                },
                "path": {
                  "type": "string",
                  "description": "The path associated with the Cookie."
                },
                "secure": {
                  "type": "boolean",
                  "description": "Indicates if the 'secure' flag is set on the Cookie."
                },
                "session": {
                  "type": "boolean",
                  "description": "True if the cookie is a session cookie."
                },
                "storeId": {
                  "type": "string",
                  "description": "The ID of the cookie store containing this cookie."
                },
                "value": {
                  "type": "string",
                  "description": "The value of the Cookie."
                },
                "expires": {
                  "type": "string",
                  "description": "Human readable expiration time."
                }
              },
              "required": [
                "domain",
                "expirationDate",
                "hostOnly",
                "httpOnly",
                "name",
                "path",
                "secure",
                "session",
                "storeId",
                "value",
                "expires"
              ]
            }
          },
          "mime": {
            "type": "string",
            "description": "Mimetype of the response."
          },
          "text": {
            "type": [
              "null",
              "string"
            ],
            "description": "The raw text of the response."
          },
          "language": {
            "type": "string",
            "enum": [
              "html",
              "javascript",
              "xml",
              "Text"
            ],
            "description": "The language associated with the response."
          },
          "rawDataType": {
            "type": "string",
            "description": "The data type of the raw response."
          }
        },
        "required": [
          "id",
          "responseCode",
          "request"
        ]
      }
    },
    "rawModeData": {
      "type": [
        "string",
        "null",
        "array"
      ],
      "description": "Contains the raw data (parameters) that Postman sends to the server"
    },
    "collectionId": {
      "type": "string",
      "description": "This field contains the unique ID of the collection to which this request belongs."
    },
    "collection": {
      "type": "string",
      "description": "This field contains the unique ID of the collection to which this request belongs."
    },
    "queryParams": {
      "type": "array",
      "items": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "urlparam",
        "title": "UrlParam",
        "description": "A response represents an HTTP response.",
        "properties": {
          "key": {
            "type": [
              "string",
              "null"
            ],
            "description": "The key of a URL parameter."
          },
          "value": {
            "type": [
              "string",
              "null"
            ],
            "description": "The value of a URL parameter"
          },
          "description": {
            "type": "string",
            "description": "You can associate descriptions with URL parameters, which are stored in this field."
          }
        }
      }
    },
    "headerData": {
      "type": "array",
      "items": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "header",
        "title": "Header",
        "description": "A response represents an HTTP response.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Name of the header goes here. e.g: `Content-Type`"
          },
          "value": {
            "type": "string",
            "description": "The value of the header"
          },
          "description": {
            "type": "string",
            "description": "You can associate descriptions with headers too."
          }
        }
      }
    },
    "pathVariableData": {
      "type": "array",
      "items": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "pathvariable",
        "title": "PathVariable",
        "description": "A request URL may contain one or more path variables (e.g: `:varname`)",
        "properties": {
          "key": {
            "type": "string",
            "description": "The identifier of a path variable goes here."
          },
          "value": {
            "type": "string",
            "description": "The value of the path variable will be substituted in place of the key."
          },
          "description": {
            "type": "string",
            "description": "Extra description about a path variable may be added in this field."
          }
        }
      }
    },
    "protocolProfileBehavior": {
      "$ref": "#/definitions/protocol-profile-behavior"
    }
  },
  "anyOf": [
    {
      "required": [
        "id",
        "method",
        "url",
        "headers",
        "name",
        "collectionId"
      ]
    },
    {
      "required": [
        "id",
        "method",
        "url",
        "headers",
        "name",
        "collection"
      ]
    }
  ]
}
